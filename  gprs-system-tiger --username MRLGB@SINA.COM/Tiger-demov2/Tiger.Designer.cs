//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.ComponentModel;
using System.Data.EntityClient;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Linq;
using System.Runtime.Serialization;
using System.Xml.Serialization;

[assembly: EdmSchemaAttribute()]
namespace Tiger
{
    #region Contexts
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    public partial class db_tigerEntities : ObjectContext
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new db_tigerEntities object using the connection string found in the 'db_tigerEntities' section of the application configuration file.
        /// </summary>
        public db_tigerEntities() : base("name=db_tigerEntities", "db_tigerEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new db_tigerEntities object.
        /// </summary>
        public db_tigerEntities(string connectionString) : base(connectionString, "db_tigerEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new db_tigerEntities object.
        /// </summary>
        public db_tigerEntities(EntityConnection connection) : base(connection, "db_tigerEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        #endregion
    
        #region Partial Methods
    
        partial void OnContextCreated();
    
        #endregion
    
        #region ObjectSet Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<tb_union_list> tb_union_list
        {
            get
            {
                if ((_tb_union_list == null))
                {
                    _tb_union_list = base.CreateObjectSet<tb_union_list>("tb_union_list");
                }
                return _tb_union_list;
            }
        }
        private ObjectSet<tb_union_list> _tb_union_list;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<tb_unit_state> tb_unit_state
        {
            get
            {
                if ((_tb_unit_state == null))
                {
                    _tb_unit_state = base.CreateObjectSet<tb_unit_state>("tb_unit_state");
                }
                return _tb_unit_state;
            }
        }
        private ObjectSet<tb_unit_state> _tb_unit_state;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<tb_unit_statistics> tb_unit_statistics
        {
            get
            {
                if ((_tb_unit_statistics == null))
                {
                    _tb_unit_statistics = base.CreateObjectSet<tb_unit_statistics>("tb_unit_statistics");
                }
                return _tb_unit_statistics;
            }
        }
        private ObjectSet<tb_unit_statistics> _tb_unit_statistics;

        #endregion

        #region AddTo Methods
    
        /// <summary>
        /// Deprecated Method for adding a new object to the tb_union_list EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddTotb_union_list(tb_union_list tb_union_list)
        {
            base.AddObject("tb_union_list", tb_union_list);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the tb_unit_state EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddTotb_unit_state(tb_unit_state tb_unit_state)
        {
            base.AddObject("tb_unit_state", tb_unit_state);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the tb_unit_statistics EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddTotb_unit_statistics(tb_unit_statistics tb_unit_statistics)
        {
            base.AddObject("tb_unit_statistics", tb_unit_statistics);
        }

        #endregion

    }

    #endregion

    #region Entities
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="db_tigerModel", Name="tb_union_list")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class tb_union_list : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new tb_union_list object.
        /// </summary>
        /// <param name="unitId">Initial value of the UnitId property.</param>
        /// <param name="alias">Initial value of the alias property.</param>
        /// <param name="aera_IrradiatedSum">Initial value of the Aera_IrradiatedSum property.</param>
        /// <param name="volumn_HeatingBox">Initial value of the Volumn_HeatingBox property.</param>
        public static tb_union_list Createtb_union_list(global::System.String unitId, global::System.String alias, global::System.Int32 aera_IrradiatedSum, global::System.Int32 volumn_HeatingBox)
        {
            tb_union_list tb_union_list = new tb_union_list();
            tb_union_list.UnitId = unitId;
            tb_union_list.alias = alias;
            tb_union_list.Aera_IrradiatedSum = aera_IrradiatedSum;
            tb_union_list.Volumn_HeatingBox = volumn_HeatingBox;
            return tb_union_list;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String UnitId
        {
            get
            {
                return _UnitId;
            }
            set
            {
                if (_UnitId != value)
                {
                    OnUnitIdChanging(value);
                    ReportPropertyChanging("UnitId");
                    _UnitId = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("UnitId");
                    OnUnitIdChanged();
                }
            }
        }
        private global::System.String _UnitId;
        partial void OnUnitIdChanging(global::System.String value);
        partial void OnUnitIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> time_online
        {
            get
            {
                return _time_online;
            }
            set
            {
                Ontime_onlineChanging(value);
                ReportPropertyChanging("time_online");
                _time_online = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("time_online");
                Ontime_onlineChanged();
            }
        }
        private Nullable<global::System.Int32> _time_online;
        partial void Ontime_onlineChanging(Nullable<global::System.Int32> value);
        partial void Ontime_onlineChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String alias
        {
            get
            {
                return _alias;
            }
            set
            {
                OnaliasChanging(value);
                ReportPropertyChanging("alias");
                _alias = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("alias");
                OnaliasChanged();
            }
        }
        private global::System.String _alias;
        partial void OnaliasChanging(global::System.String value);
        partial void OnaliasChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Aera_IrradiatedSum
        {
            get
            {
                return _Aera_IrradiatedSum;
            }
            set
            {
                OnAera_IrradiatedSumChanging(value);
                ReportPropertyChanging("Aera_IrradiatedSum");
                _Aera_IrradiatedSum = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Aera_IrradiatedSum");
                OnAera_IrradiatedSumChanged();
            }
        }
        private global::System.Int32 _Aera_IrradiatedSum;
        partial void OnAera_IrradiatedSumChanging(global::System.Int32 value);
        partial void OnAera_IrradiatedSumChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Volumn_HeatingBox
        {
            get
            {
                return _Volumn_HeatingBox;
            }
            set
            {
                OnVolumn_HeatingBoxChanging(value);
                ReportPropertyChanging("Volumn_HeatingBox");
                _Volumn_HeatingBox = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Volumn_HeatingBox");
                OnVolumn_HeatingBoxChanged();
            }
        }
        private global::System.Int32 _Volumn_HeatingBox;
        partial void OnVolumn_HeatingBoxChanging(global::System.Int32 value);
        partial void OnVolumn_HeatingBoxChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> Start_time
        {
            get
            {
                return _Start_time;
            }
            set
            {
                OnStart_timeChanging(value);
                ReportPropertyChanging("Start_time");
                _Start_time = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Start_time");
                OnStart_timeChanged();
            }
        }
        private Nullable<global::System.DateTime> _Start_time;
        partial void OnStart_timeChanging(Nullable<global::System.DateTime> value);
        partial void OnStart_timeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> Stop_time
        {
            get
            {
                return _Stop_time;
            }
            set
            {
                OnStop_timeChanging(value);
                ReportPropertyChanging("Stop_time");
                _Stop_time = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Stop_time");
                OnStop_timeChanged();
            }
        }
        private Nullable<global::System.DateTime> _Stop_time;
        partial void OnStop_timeChanging(Nullable<global::System.DateTime> value);
        partial void OnStop_timeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> gprs_state
        {
            get
            {
                return _gprs_state;
            }
            set
            {
                Ongprs_stateChanging(value);
                ReportPropertyChanging("gprs_state");
                _gprs_state = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("gprs_state");
                Ongprs_stateChanged();
            }
        }
        private Nullable<global::System.Int32> _gprs_state;
        partial void Ongprs_stateChanging(Nullable<global::System.Int32> value);
        partial void Ongprs_stateChanged();

        #endregion

    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="db_tigerModel", Name="tb_unit_state")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class tb_unit_state : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new tb_unit_state object.
        /// </summary>
        /// <param name="unitId">Initial value of the UnitId property.</param>
        /// <param name="dateTime_RecvDate">Initial value of the DateTime_RecvDate property.</param>
        public static tb_unit_state Createtb_unit_state(global::System.Int32 unitId, global::System.DateTime dateTime_RecvDate)
        {
            tb_unit_state tb_unit_state = new tb_unit_state();
            tb_unit_state.UnitId = unitId;
            tb_unit_state.DateTime_RecvDate = dateTime_RecvDate;
            return tb_unit_state;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Temp_HeatingBox
        {
            get
            {
                return _Temp_HeatingBox;
            }
            set
            {
                OnTemp_HeatingBoxChanging(value);
                ReportPropertyChanging("Temp_HeatingBox");
                _Temp_HeatingBox = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Temp_HeatingBox");
                OnTemp_HeatingBoxChanged();
            }
        }
        private global::System.String _Temp_HeatingBox;
        partial void OnTemp_HeatingBoxChanging(global::System.String value);
        partial void OnTemp_HeatingBoxChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Temp_CollectorBox
        {
            get
            {
                return _Temp_CollectorBox;
            }
            set
            {
                OnTemp_CollectorBoxChanging(value);
                ReportPropertyChanging("Temp_CollectorBox");
                _Temp_CollectorBox = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Temp_CollectorBox");
                OnTemp_CollectorBoxChanged();
            }
        }
        private global::System.String _Temp_CollectorBox;
        partial void OnTemp_CollectorBoxChanging(global::System.String value);
        partial void OnTemp_CollectorBoxChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Temp_CollectorIn
        {
            get
            {
                return _Temp_CollectorIn;
            }
            set
            {
                OnTemp_CollectorInChanging(value);
                ReportPropertyChanging("Temp_CollectorIn");
                _Temp_CollectorIn = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Temp_CollectorIn");
                OnTemp_CollectorInChanged();
            }
        }
        private global::System.String _Temp_CollectorIn;
        partial void OnTemp_CollectorInChanging(global::System.String value);
        partial void OnTemp_CollectorInChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Temp_CollectorOut
        {
            get
            {
                return _Temp_CollectorOut;
            }
            set
            {
                OnTemp_CollectorOutChanging(value);
                ReportPropertyChanging("Temp_CollectorOut");
                _Temp_CollectorOut = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Temp_CollectorOut");
                OnTemp_CollectorOutChanged();
            }
        }
        private global::System.String _Temp_CollectorOut;
        partial void OnTemp_CollectorOutChanging(global::System.String value);
        partial void OnTemp_CollectorOutChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Temp_Ambient
        {
            get
            {
                return _Temp_Ambient;
            }
            set
            {
                OnTemp_AmbientChanging(value);
                ReportPropertyChanging("Temp_Ambient");
                _Temp_Ambient = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Temp_Ambient");
                OnTemp_AmbientChanged();
            }
        }
        private global::System.String _Temp_Ambient;
        partial void OnTemp_AmbientChanging(global::System.String value);
        partial void OnTemp_AmbientChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Humidity_Ambient
        {
            get
            {
                return _Humidity_Ambient;
            }
            set
            {
                OnHumidity_AmbientChanging(value);
                ReportPropertyChanging("Humidity_Ambient");
                _Humidity_Ambient = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Humidity_Ambient");
                OnHumidity_AmbientChanged();
            }
        }
        private global::System.String _Humidity_Ambient;
        partial void OnHumidity_AmbientChanging(global::System.String value);
        partial void OnHumidity_AmbientChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Speed_Wind
        {
            get
            {
                return _Speed_Wind;
            }
            set
            {
                OnSpeed_WindChanging(value);
                ReportPropertyChanging("Speed_Wind");
                _Speed_Wind = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Speed_Wind");
                OnSpeed_WindChanged();
            }
        }
        private global::System.String _Speed_Wind;
        partial void OnSpeed_WindChanging(global::System.String value);
        partial void OnSpeed_WindChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String SystemState
        {
            get
            {
                return _SystemState;
            }
            set
            {
                OnSystemStateChanging(value);
                ReportPropertyChanging("SystemState");
                _SystemState = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("SystemState");
                OnSystemStateChanged();
            }
        }
        private global::System.String _SystemState;
        partial void OnSystemStateChanging(global::System.String value);
        partial void OnSystemStateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ErrorState
        {
            get
            {
                return _ErrorState;
            }
            set
            {
                OnErrorStateChanging(value);
                ReportPropertyChanging("ErrorState");
                _ErrorState = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ErrorState");
                OnErrorStateChanged();
            }
        }
        private global::System.String _ErrorState;
        partial void OnErrorStateChanging(global::System.String value);
        partial void OnErrorStateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 UnitId
        {
            get
            {
                return _UnitId;
            }
            set
            {
                if (_UnitId != value)
                {
                    OnUnitIdChanging(value);
                    ReportPropertyChanging("UnitId");
                    _UnitId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("UnitId");
                    OnUnitIdChanged();
                }
            }
        }
        private global::System.Int32 _UnitId;
        partial void OnUnitIdChanging(global::System.Int32 value);
        partial void OnUnitIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime DateTime_RecvDate
        {
            get
            {
                return _DateTime_RecvDate;
            }
            set
            {
                if (_DateTime_RecvDate != value)
                {
                    OnDateTime_RecvDateChanging(value);
                    ReportPropertyChanging("DateTime_RecvDate");
                    _DateTime_RecvDate = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("DateTime_RecvDate");
                    OnDateTime_RecvDateChanged();
                }
            }
        }
        private global::System.DateTime _DateTime_RecvDate;
        partial void OnDateTime_RecvDateChanging(global::System.DateTime value);
        partial void OnDateTime_RecvDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Amount_Irradiated
        {
            get
            {
                return _Amount_Irradiated;
            }
            set
            {
                OnAmount_IrradiatedChanging(value);
                ReportPropertyChanging("Amount_Irradiated");
                _Amount_Irradiated = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Amount_Irradiated");
                OnAmount_IrradiatedChanged();
            }
        }
        private global::System.String _Amount_Irradiated;
        partial void OnAmount_IrradiatedChanging(global::System.String value);
        partial void OnAmount_IrradiatedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Amount_IrradiatedSum
        {
            get
            {
                return _Amount_IrradiatedSum;
            }
            set
            {
                OnAmount_IrradiatedSumChanging(value);
                ReportPropertyChanging("Amount_IrradiatedSum");
                _Amount_IrradiatedSum = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Amount_IrradiatedSum");
                OnAmount_IrradiatedSumChanged();
            }
        }
        private global::System.String _Amount_IrradiatedSum;
        partial void OnAmount_IrradiatedSumChanging(global::System.String value);
        partial void OnAmount_IrradiatedSumChanged();

        #endregion

    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="db_tigerModel", Name="tb_unit_statistics")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class tb_unit_statistics : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new tb_unit_statistics object.
        /// </summary>
        /// <param name="unitId">Initial value of the UnitId property.</param>
        /// <param name="dateTime_Statics">Initial value of the DateTime_Statics property.</param>
        public static tb_unit_statistics Createtb_unit_statistics(global::System.Int32 unitId, global::System.DateTime dateTime_Statics)
        {
            tb_unit_statistics tb_unit_statistics = new tb_unit_statistics();
            tb_unit_statistics.UnitId = unitId;
            tb_unit_statistics.DateTime_Statics = dateTime_Statics;
            return tb_unit_statistics;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 UnitId
        {
            get
            {
                return _UnitId;
            }
            set
            {
                if (_UnitId != value)
                {
                    OnUnitIdChanging(value);
                    ReportPropertyChanging("UnitId");
                    _UnitId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("UnitId");
                    OnUnitIdChanged();
                }
            }
        }
        private global::System.Int32 _UnitId;
        partial void OnUnitIdChanging(global::System.Int32 value);
        partial void OnUnitIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String System_heat
        {
            get
            {
                return _System_heat;
            }
            set
            {
                OnSystem_heatChanging(value);
                ReportPropertyChanging("System_heat");
                _System_heat = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("System_heat");
                OnSystem_heatChanged();
            }
        }
        private global::System.String _System_heat;
        partial void OnSystem_heatChanging(global::System.String value);
        partial void OnSystem_heatChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Conventional_energy
        {
            get
            {
                return _Conventional_energy;
            }
            set
            {
                OnConventional_energyChanging(value);
                ReportPropertyChanging("Conventional_energy");
                _Conventional_energy = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Conventional_energy");
                OnConventional_energyChanged();
            }
        }
        private global::System.String _Conventional_energy;
        partial void OnConventional_energyChanging(global::System.String value);
        partial void OnConventional_energyChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Storage_tank
        {
            get
            {
                return _Storage_tank;
            }
            set
            {
                OnStorage_tankChanging(value);
                ReportPropertyChanging("Storage_tank");
                _Storage_tank = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Storage_tank");
                OnStorage_tankChanged();
            }
        }
        private global::System.String _Storage_tank;
        partial void OnStorage_tankChanging(global::System.String value);
        partial void OnStorage_tankChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String System_efficiency
        {
            get
            {
                return _System_efficiency;
            }
            set
            {
                OnSystem_efficiencyChanging(value);
                ReportPropertyChanging("System_efficiency");
                _System_efficiency = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("System_efficiency");
                OnSystem_efficiencyChanged();
            }
        }
        private global::System.String _System_efficiency;
        partial void OnSystem_efficiencyChanging(global::System.String value);
        partial void OnSystem_efficiencyChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Solar_assurance_day
        {
            get
            {
                return _Solar_assurance_day;
            }
            set
            {
                OnSolar_assurance_dayChanging(value);
                ReportPropertyChanging("Solar_assurance_day");
                _Solar_assurance_day = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Solar_assurance_day");
                OnSolar_assurance_dayChanged();
            }
        }
        private global::System.String _Solar_assurance_day;
        partial void OnSolar_assurance_dayChanging(global::System.String value);
        partial void OnSolar_assurance_dayChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Solar_assurance_year
        {
            get
            {
                return _Solar_assurance_year;
            }
            set
            {
                OnSolar_assurance_yearChanging(value);
                ReportPropertyChanging("Solar_assurance_year");
                _Solar_assurance_year = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Solar_assurance_year");
                OnSolar_assurance_yearChanged();
            }
        }
        private global::System.String _Solar_assurance_year;
        partial void OnSolar_assurance_yearChanging(global::System.String value);
        partial void OnSolar_assurance_yearChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Energy_alternative
        {
            get
            {
                return _Energy_alternative;
            }
            set
            {
                OnEnergy_alternativeChanging(value);
                ReportPropertyChanging("Energy_alternative");
                _Energy_alternative = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Energy_alternative");
                OnEnergy_alternativeChanged();
            }
        }
        private global::System.String _Energy_alternative;
        partial void OnEnergy_alternativeChanging(global::System.String value);
        partial void OnEnergy_alternativeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Carbon_emission
        {
            get
            {
                return _Carbon_emission;
            }
            set
            {
                OnCarbon_emissionChanging(value);
                ReportPropertyChanging("Carbon_emission");
                _Carbon_emission = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Carbon_emission");
                OnCarbon_emissionChanged();
            }
        }
        private global::System.String _Carbon_emission;
        partial void OnCarbon_emissionChanging(global::System.String value);
        partial void OnCarbon_emissionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Sulfur_emission
        {
            get
            {
                return _Sulfur_emission;
            }
            set
            {
                OnSulfur_emissionChanging(value);
                ReportPropertyChanging("Sulfur_emission");
                _Sulfur_emission = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Sulfur_emission");
                OnSulfur_emissionChanged();
            }
        }
        private global::System.String _Sulfur_emission;
        partial void OnSulfur_emissionChanging(global::System.String value);
        partial void OnSulfur_emissionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Dust_emission
        {
            get
            {
                return _Dust_emission;
            }
            set
            {
                OnDust_emissionChanging(value);
                ReportPropertyChanging("Dust_emission");
                _Dust_emission = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Dust_emission");
                OnDust_emissionChanged();
            }
        }
        private global::System.String _Dust_emission;
        partial void OnDust_emissionChanging(global::System.String value);
        partial void OnDust_emissionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Fee_effect
        {
            get
            {
                return _Fee_effect;
            }
            set
            {
                OnFee_effectChanging(value);
                ReportPropertyChanging("Fee_effect");
                _Fee_effect = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Fee_effect");
                OnFee_effectChanged();
            }
        }
        private global::System.String _Fee_effect;
        partial void OnFee_effectChanging(global::System.String value);
        partial void OnFee_effectChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime DateTime_Statics
        {
            get
            {
                return _DateTime_Statics;
            }
            set
            {
                if (_DateTime_Statics != value)
                {
                    OnDateTime_StaticsChanging(value);
                    ReportPropertyChanging("DateTime_Statics");
                    _DateTime_Statics = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("DateTime_Statics");
                    OnDateTime_StaticsChanged();
                }
            }
        }
        private global::System.DateTime _DateTime_Statics;
        partial void OnDateTime_StaticsChanging(global::System.DateTime value);
        partial void OnDateTime_StaticsChanged();

        #endregion

    
    }

    #endregion

    
}
